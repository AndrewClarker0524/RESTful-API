{
	"info": {
		"_postman_id": "f69c0f88-ca2b-4c40-8730-2a3e5e6070af",
		"name": "Haru API",
		"description": "Welcome to the Haru-Fashion API, a RESTful API for Haru-Fashion e-commerce web application. \n\nThis API can be used to access Haru-Fashion API endpoints, which can get information on various products, categories in our database. Certain information and actions, for example, retrieving customers, creating products, can only be done when authenticated and authorized. \n\nThis API is developed with NodeJS, Express, TypeScript, Prisma and PostgreSQL.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/categories?select=name,description&order_by=createdAt.desc,name",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"categories"
							],
							"query": [
								{
									"key": "select",
									"value": "name,description"
								},
								{
									"key": "order_by",
									"value": "createdAt.desc,name"
								}
							]
						},
						"description": "Fetch all categories from the database. Includes select and ordering."
					},
					"response": []
				},
				{
					"name": "Get Specific Category",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/categories/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"1"
							]
						},
						"description": "Fetch specific category by ID from the database. Includes select and ordering."
					},
					"response": []
				},
				{
					"name": "Create Category",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"sneakers\",\n    \"description\": \"this is desc\",\n    \"thumbnailImage\": \"http://dummyimage.com/720x400.png/deefdd/000eee\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/categories/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								""
							]
						},
						"description": "Add new category to the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				},
				{
					"name": "Delete Category",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/categories/4",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"4"
							]
						},
						"description": "Remove a category by its ID from the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				},
				{
					"name": "Update Category",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"men\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/categories/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"categories",
								"1"
							]
						},
						"description": "Update specific category by its ID from the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/products?order_by=price.desc,name&skip=50&limit=10&price=gte:50&price=lt:100&stock=gt:50&stock=lt:70&select=name,price,stock",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							],
							"query": [
								{
									"key": "order_by",
									"value": "price.desc,name"
								},
								{
									"key": "skip",
									"value": "50"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "price",
									"value": "gte:50"
								},
								{
									"key": "price",
									"value": "lt:100"
								},
								{
									"key": "stock",
									"value": "gt:50"
								},
								{
									"key": "stock",
									"value": "lt:70"
								},
								{
									"key": "stock",
									"value": "equals:58",
									"disabled": true
								},
								{
									"key": "price",
									"value": "equals:55",
									"disabled": true
								},
								{
									"key": "select",
									"value": "name,price,stock"
								}
							]
						},
						"description": "Fetch all products from the database. Includes select and ordering."
					},
					"response": []
				},
				{
					"name": "Search Products",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/products/search?q=condimentum",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "condimentum"
								}
							]
						},
						"description": "Perform full-text search for all products."
					},
					"response": []
				},
				{
					"name": "Get Specific Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/products/5?include=category",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"5"
							],
							"query": [
								{
									"key": "include",
									"value": "category"
								}
							]
						},
						"description": "Fetch specific product by ID from the database. Includes select and ordering."
					},
					"response": []
				},
				{
					"name": "Create New Product",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Wallie\",\n    \"price\": \"1500\",\n    \"description\": \"this is just a description\",\n    \"image1\": \"image1.png\",\n    \"image2\": \"image2.png\",\n    \"categoryId\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/products",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products"
							]
						},
						"description": "Add new product to the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				},
				{
					"name": "Update  Product",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"name\": \"updated category\",\n        \"price\": \"100\",\n        \"discountPercent\": \"5\",\n        \"description\": \"this is updated description\",\n        \"detail\": \"this is updated detail\",\n        \"categoryId\": \"2\",\n        \"image1\": \"image1.png\",\n        \"image2\": \"image2.png\",\n        \"stock\": \"20\"\n      }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/products/101",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"101"
							]
						},
						"description": "Update specific product by its ID from the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				},
				{
					"name": "Delete Specific Product",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/products/102",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"products",
								"102"
							]
						},
						"description": "Remove a product by its ID from the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				}
			]
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Get All Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/customers",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						},
						"description": "Fetch all customers from the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				},
				{
					"name": "Get Specific Customer",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/customers/3",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"3"
							]
						},
						"description": "Fetch specific customer by their ID from the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/customers/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"customers",
								"999"
							]
						},
						"description": "Delete a customer by their ID from the database. To perform this action, user must be authenticated and authorized."
					},
					"response": []
				}
			]
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Register Customer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"email\": \"demo@gmail.com\",\n      \"fullname\": \"newuser\",\n      \"password\": \"demopassword\",\n      \"shippingAddress\": \"yangon\",\n      \"phone\": \"09283928\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Register a new customer by passing required fields in the body."
					},
					"response": []
				},
				{
					"name": "Login Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('TOKEN', pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n      \"email\": \"demo@gmail.com\",\n      \"password\": \"demopassword\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						},
						"description": "Login as a customer when the customer is already registered. "
					},
					"response": []
				},
				{
					"name": "Get Me",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Retrieve current logged-in customer's details."
					},
					"response": []
				},
				{
					"name": "Update Customer Details (self)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"fullname\": \"Mrs.Demo\",\n    \"phone\": \"571661\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/update-details",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"update-details"
							]
						},
						"description": "Update current logged-in customer's details."
					},
					"response": []
				},
				{
					"name": "Update Customer Password (self)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"demopassword2\",\n    \"newPassword\": \"demopassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/change-password",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"change-password"
							]
						},
						"description": "Update current logged-in customer's password. Customer must type current password correctly in order to perform this action."
					},
					"response": []
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"demo@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/forgot-password",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"forgot-password"
							]
						},
						"description": "Forgot password can be reset by providing email in the body. Reset password token is sent via email."
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"newpassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/reset-password/8935f53cee400111c328f6c6ba57c134f330c4ca",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"reset-password",
								"8935f53cee400111c328f6c6ba57c134f330c4ca"
							]
						},
						"description": "To reset password, this route can be requested (which is sent via email)"
					},
					"response": []
				}
			]
		},
		{
			"name": "Admins",
			"item": [
				{
					"name": "Create Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin2\",\n    \"email\": \"admin2@gmail.com\",\n    \"password\": \"admin2\",\n    \"role\": \"ADMIN\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admins",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins"
							]
						},
						"description": "Add a new admin to the database. To perform this action, user must be authenticated and authorized as a superadmin."
					},
					"response": []
				},
				{
					"name": "Admin Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set('TOKEN', pm.response.json().token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"dummyadmin@gmail.com\",\n    \"password\": \"verysecurepassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admins/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"login"
							]
						},
						"description": "Login as an admin."
					},
					"response": []
				},
				{
					"name": "Get Current Admin",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admins/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"me"
							]
						},
						"description": "Retrieve current logged-in admin's details."
					},
					"response": []
				},
				{
					"name": "Change Admin Password",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"verysecurepassword\",\n    \"newPassword\": \"nextsecurepassword\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admins/change-password",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"change-password"
							]
						},
						"description": "Update current logged-in admin's password. User must type current password correctly in order to perform this action.\n"
					},
					"response": []
				},
				{
					"name": "Update Admin (self)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"updated admin\",\n    \"email\": \"updatedemail@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admins/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								""
							]
						},
						"description": "Update current logged-in admin's details."
					},
					"response": []
				},
				{
					"name": "Get All Admins (by superadmin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admins/",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								""
							]
						},
						"description": "Retrieve all admins from the database. This action can only be performed by superadmin role.\n"
					},
					"response": []
				},
				{
					"name": "Get Specific Admin (by superadmin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/admins/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"1"
							]
						},
						"description": "Retrieve specific admin by their ID from the database. This action can only be performed by superadmin role.\n"
					},
					"response": []
				},
				{
					"name": "Update Admin (by superadmin)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"admin11\",\n    \"active\": true,\n    \"password\": \"admin11\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admins/2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"2"
							]
						},
						"description": "Update specific admin by their ID. This action can only be performed by superadmin role.\n"
					},
					"response": []
				},
				{
					"name": "Seed Database",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"secret_seeding_password\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/admins/seed",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"admins",
								"seed"
							]
						},
						"description": "Seed data to the database when deployed. To perform this action, seeding password must be correct."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}